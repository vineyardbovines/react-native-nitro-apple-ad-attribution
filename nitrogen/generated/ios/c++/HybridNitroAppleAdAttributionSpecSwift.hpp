///
/// HybridNitroAppleAdAttributionSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridNitroAppleAdAttributionSpec.hpp"

// Forward declaration of `HybridNitroAppleAdAttributionSpec_cxx` to properly resolve imports.
namespace NitroAppleAdAttribution
{
  class HybridNitroAppleAdAttributionSpec_cxx;
}

// Forward declaration of `AdServicesAttributionDataResponse` to properly resolve imports.
namespace margelo::nitro::nitroappleadattribution
{
  struct AdServicesAttributionDataResponse;
}
// Forward declaration of `AppleAdsAttributionData` to properly resolve imports.
namespace margelo::nitro::nitroappleadattribution
{
  struct AppleAdsAttributionData;
}

#include <NitroModules/Promise.hpp>
#include "AdServicesAttributionDataResponse.hpp"
#include "AppleAdsAttributionData.hpp"
#include <string>
#include <optional>
#include <exception>

#include "NitroAppleAdAttribution-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::nitroappleadattribution
{

  /**
   * The C++ part of HybridNitroAppleAdAttributionSpec_cxx.swift.
   *
   * HybridNitroAppleAdAttributionSpecSwift (C++) accesses HybridNitroAppleAdAttributionSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridNitroAppleAdAttributionSpec_cxx can directly inherit from the C++ class HybridNitroAppleAdAttributionSpec
   * to simplify the whole structure and memory management.
   */
  class HybridNitroAppleAdAttributionSpecSwift : public virtual HybridNitroAppleAdAttributionSpec
  {
  public:
    // Constructor from a Swift instance
    explicit HybridNitroAppleAdAttributionSpecSwift(const NitroAppleAdAttribution::HybridNitroAppleAdAttributionSpec_cxx &swiftPart) : HybridObject(HybridNitroAppleAdAttributionSpec::TAG),
                                                                                                                                       _swiftPart(swiftPart) {}

  public:
    // Get the Swift part
    inline NitroAppleAdAttribution::HybridNitroAppleAdAttributionSpec_cxx &getSwiftPart() noexcept
    {
      return _swiftPart;
    }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override
    {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties

  public:
    // Methods
    inline std::shared_ptr<Promise<AdServicesAttributionDataResponse>> getAdServicesAttributionData() override
    {
      auto __result = _swiftPart.getAdServicesAttributionData();
      if (__result.hasError()) [[unlikely]]
      {
        std::rethrow_exception(__result.error());
      }
      auto __value = std::move(__result.value());
      return __value;
    }

  private:
    NitroAppleAdAttribution::HybridNitroAppleAdAttributionSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::nitroappleadattribution
